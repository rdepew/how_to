How to create and copy SSH keys
===============================

You set up computers for SSH'ing by (1) creating a public key and a private
key, and (2) by copying the public key to the other computer. Best to explain
by quoting from
https://docs.aws.amazon.com/greengrass/latest/developerguide/device-tester-for-greengrass-ug.html:

For the truly manual way to do it, see the bottom of this doc.

Adding Authorized SSH Keys to Your Device Under Test
----------------------------------------------------

AWS IoT Device Tester must use your SSH private key to sign in to your device
under test. To authorize your SSH private key to sign in to your device under
test, use the ssh-copy-id command from your host computer. This command adds
your public key into the ~/.ssh/authorized_keys file on your device under test.
For example:

    $ ssh-copy-id<remote-ssh-user>@<remote-device-ip>

Where remote-ssh-user is the user name used to sign in to your device under
test and remote-device-ip is the IP address of the device under test to run
tests against. For example:

    ssh-copy-id pi@192.168.1.5

When prompted, enter the password for the user name you specified in the
ssh-copy-id command.

ssh-copy-id assumes the public key is named id_rsa.pub and is stored the
default location (on macOS and Linux, ~/.ssh/ and on Windows,
C:\Users\<user-name>\.ssh). If you gave the public key a different name or
stored it in a different location, you must specify the fully qualified path to
your SSH public key using the -i option to ssh-copy-id (for example,
ssh-copy-id -i ~/my/path/myKey.pub). For more information about creating SSH
keys and copying public keys, see SSH-COPY-ID.

For more information
--------------------

For more information about ssh-keygen, see this authoritative webpage:
https://www.ssh.com/ssh/keygen/

The truly manual way to do it
-----------------------------

Call the machine you're typing on, the client.

Call the machine you want to ssh to, the host.

On the client, type the command

    $ ssh-keygen

... and for now accept all the defaults. If you look in the .ssh
directory, you will have two keys, a private key, probably called id-rsa,
and a public key, probably called id-rsa.pub.

Type the command

     $ cat ~/.ssh/id-rsa.pub

to print the contents of the public key to your display.

On the host, you're going to add the public key to the file of authorized
keys. You will need to use the mouse to copy and paste the contents of 
the public key. 

On the host, type the command

     $ echo "
             (now copy and paste the public key)
                                                " > ~/.ssh/authorized_keys

(The command should look something like this:

     $ echo "ssh-rsa BLAHBLAH yourname@theclient" > ~/.ssh/authorized_keys)

Now go back to the client to test it out. If the IP address of the host
is 192.168.0.100, and your username on the host is jack,
then on the client, type the command

     $ssh jack@192.168.0.100

Answer 'yes' if it asks if you really want to make the connection. 
Press Enter for all other prompts. Then you should be in.
